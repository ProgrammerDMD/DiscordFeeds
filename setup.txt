transactional-update run zypper install docker docker-compose docker-compose-switch
sudo systemctl enable docker
reboot

kubectl create namespace stackgres
kubectl create namespace monitoring
kubectl create namespace production
kubectl create namespace development

# Installing helm
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh

export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
chmod o-r ~/.kube/config
chmod g-r ~/.kube/config

# Install Prometheus and Grafana
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add stable https://charts.helm.sh/stable
helm repo update

kubectl delete crd alertmanagerconfigs.monitoring.coreos.com
kubectl delete crd alertmanagers.monitoring.coreos.com
kubectl delete crd podmonitors.monitoring.coreos.com
kubectl delete crd probes.monitoring.coreos.com
kubectl delete crd prometheusagents.monitoring.coreos.com
kubectl delete crd prometheuses.monitoring.coreos.com
kubectl delete crd prometheusrules.monitoring.coreos.com
kubectl delete crd scrapeconfigs.monitoring.coreos.com
kubectl delete crd servicemonitors.monitoring.coreos.com
kubectl delete crd thanosrulers.monitoring.coreos.com

helm install --namespace monitoring prometheus prometheus-community/kube-prometheus-stack --set grafana.enabled=true

# Cloning github
git clone https://github.com/ProgrammerDMD/DiscordFeeds.git

# Deploy Grafana Ingress
cd DiscordFeeds/Templates
kubectl apply -f deploy-secret.yaml
kubectl apply -f deploy-grafana-ingress.yaml

# Get username and password
kubectl get secret prometheus-grafana --namespace monitoring --template '{{ printf "user = %s\npassword = %s\n" (index .data "admin-user" | base64decode) (index .data "admin-password" | base64decode) }}'

# Install Stackgres
helm repo add stackgres-charts https://stackgres.io/downloads/stackgres-k8s/stackgres/helm/
helm repo update

helm install --namespace stackgres stackgres-operator \
    --set grafana.autoEmbed=true \
    --set-string grafana.webHost=prometheus-grafana.monitoring \
    --set-string grafana.secretNamespace=monitoring \
    --set-string grafana.secretName=prometheus-grafana \
    --set-string grafana.secretUserKey=admin \
    --set-string grafana.secretPasswordKey= \
    --set-string adminui.service.type=LoadBalancer \
stackgres-charts/stackgres-operator

kubectl apply -f deploy-stackgres-ingress.yaml

postgresql.conf
cron.log_run = off
cron.database_name=website
cron.use_background_workers=on
max_worker_processes=20
shared_preload_libraries=pg_stat_statements, auto_explain,pg_cron

# Installing pnpm
curl -fsSL https://get.pnpm.io/install.sh | sh -
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
nvm install 20
pnpm add -D drizzle-kit

# Installing ArgoCD - https://argo-cd.readthedocs.io/en/stable/getting_started/
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d